/* .filterListItem.active {
        background-color: #9517c3; 
}
 */
/* div.2018{
  transition: all 0.4s ease-in;
}

div.2017{
  transition: all 0.4s ease-in;
}
div.2016{
  transition: all 0.4s ease-in;
} */

.show-filters{
  margin-left: 20px;
  display: none;
  flex-direction: column;
  position: fixed;

}
ul{
  position: fixed;
  top: 110px;
}


a.filters{
  margin-left: 20px;
  display: flex;
  flex-direction: column;
}

@font-face {
    font-family: Sourcecodepro Regular;
    src: url(sourcecodepro-regular.ttf);
}
body {
  font-family: Sourcecodepro Regular;
  font-size: 16px;
  line-height: 1.5;
  color: #000;
  background-color: #fff;
	/* we add some padding top to create the space
  for our fixed header to sit inside of */
  padding-top: 104px;
}

a {
  color: #000;
  text-decoration: none;
}
.category_item:hover{text-decoration: line-through;
}
a:hover{
  text-decoration: line-through;
}

section{
  transition: transform 1s;
  will-change: transform;
}

header {
/*   overflow: hidden; */
  
  position: fixed;
  top: 0;
  left: 0;
  
  width: 100%;
  padding: 20px;
	/* flexbox is a modern css layout mode that gives us
  much more power over how elements are positioned */
  display: flex;
  justify-content: space-between;
  align-items: center;
  
	/* z-index allows us to control the order of elements stacking
  on top of each other. it only really matters when using
  fixed/absolute positioning because elements get taken onto 
  separate layers */
  z-index: 2;
}

header h1 {
/*   float: left; */
/*   width: 100px; */
}


header nav {
/*   float: right; */
/*   margin-top: 20px; */
}

header nav a {
  margin-left: 10px;
}

/* .selected {
  border-bottom: solid 2px #fff;
  padding-bottom: 3px;
} */

div.category_container{
  background-color: white;
  top: 106px;
  position: fixed;
  display: flex;
  margin-left: 110px;
 overflow: hidden;
  flex-direction: column;
  align-items: flex-end;
}
.category_item{
  background-color: white;
  border: none;
  outline: none;
  cursor: pointer;
  font-size: 16px;
	font-family: Sourcecodepro Regular;
  line-height: 1.2;
  text-align: right;
}

.photos {
/*   text-align: center; */
  max-width: 960px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 10px;
  padding-right: 10px;
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end;
  justify-content: center;
  
}

.photo {
	/* inline block gives us a the best of both inline and block
  elements allowing us to stack them side by side and also 
  align our elements vertically in the row*/
/*   display: inline-block; */
  width:  320px;
  margin: 10px;
	/* we can use vertical align to align or rows to bottom/middle/top   */
	/* vertical-align: top; */
	/* by using position relative on the parent photo element, our
  overlay will be positioned in relation to it */
  position: relative;
}

.overlay {
	/* by using absolute position we can posotion things in relation
  to the page or other parent elements */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
	/* we can specify colours using rgb values, and in this case 
  we can also control the 'alpha' channel which is for transparency */
  background-color: rgba(255, 255, 255, 0.7);
  
  opacity: 0;
	
  transition: opacity 0.3s;
}

.photo:hover .overlay {
  opacity: 1;
}
.photo:active .overlay {
  opacity: 1;
}

.photo h2 {
  position: absolute;
  left: -15px;
  top: -15px;
  font-size: 32px;
  line-height: 1.2;
  text-transform: uppercase;
}

h3{
  padding-top: 5px;
  font-size: 26px;
  line-height: 1;
}

h4{
  font-size: 16px;
  line-height: 1.4;
  margin-left: 20px;
  margin-right: 20px;
  padding-right: 20px;
}



/* .small {
  width: 220px;
} */

/* .large {
  width: 400px;
} */

footer {
  padding: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

footer.contact{
  position: fixed;
 align-items: center;
  bottom: 5px;
}

/* footer nav a {
  width: 16px;
  margin-left: 5px;
  display: inline-block;
} */

/* .filterDiv {
  opacity: 1;
  transition: opacity 1s;
}

.filterDiv.hidden {
  opacity: 0.75;
  transition: opacity 1s;
} */

@media (min-width : 320px) and (max-width : 736px) {
  .filters-list{display: none;}
/*   div.category_container{
   background-color: rgba(0,0,0,0);
  position: fixed;
  display: inline;
 z-index: 3;
  align-items: center;
   margin: -40px auto 0 15px;
    text-align: left;
   opacity: 0;
}
  .category_item{
    background-color: rgba(0,0,0,0);
     display: inline;
z-index: 3;
    }
  
} */

